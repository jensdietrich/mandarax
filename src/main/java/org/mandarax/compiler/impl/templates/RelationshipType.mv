package @{context.packageDeclaration.name};
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
@foreach{imp:context.importDeclarations}@{imp}
@end{}
/**
 * Class representing the relationship <strong>@{rel.name}</strong>.
 * Generated by @{compiler}.
 * @version @{timestamp} 
 */
public class @{rel.name}@{ext} {

	// fields created for slots@foreach{slot:rel.slotDeclarations} 
	public @{slot.type} @{slot.name} = @{slot.defaultValue};@end{}
	
	// constructors
	public @{rel.name}@{ext} () {
		super();
	}
	
	public @{rel.name}@{ext} (@foreach{slot:rel.slotDeclarations} @{slot.type} @{slot.name} @end{","}) {
		super();
		@foreach{slot:rel.slotDeclarations}this.@{slot.name}=@{slot.name}; 
		@end{}
	}

	// standard methods
	@Override
	public boolean equals(Object obj) {
   		if (obj == null) { return false; }
   		if (obj == this) { return true; }
		if (obj.getClass() != getClass()) {
			return false;
		}
   		@{rel.name}@{ext} _tmp = (@{rel.name}@{ext}) obj;
   		return new EqualsBuilder()
            @foreach{slot:rel.slotDeclarations}.append(@{slot.name}, _tmp.@{slot.name})
            @end{}.isEquals();
  	}
  
  	@Override
   	public int hashCode() {
    	return new HashCodeBuilder(17, 37)
        	@foreach{slot:rel.slotDeclarations}.append(@{slot.name})
            @end{}.toHashCode();
   	}
   	@Override
   	public String toString() {
    	return new ToStringBuilder(this)
    		@foreach{slot:rel.slotDeclarations}.append("@{slot.name}",@{slot.name})
    		@end{}.toString();
   }
   

}

