package org.mandarax.examples.userv.rules.generated;
 
import org.mandarax.examples.userv.domain.*;

import org.mandarax.rt.*;

/**
 * Interface for queries for relationship <strong>PremiumDiscount</strong>.
 * Generated by org.mandarax.compiler.impl.DefaultCompiler.
 * @version Dec 2, 2010 1:53:26 PM 
 */
public class PremiumDiscountRelInstances {
	// object references
	
	
	// fields representing annotations
	
	// rule: AD_01: _car.getHasAirbags() & !(_car.getHasFrontPassengerAirbag()) & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,12);
	private final static java.util.Properties _annotations_AD_01 = new java.util.Properties();
	
	// rule: AD_02: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,15);
	private final static java.util.Properties _annotations_AD_02 = new java.util.Properties();
	
	// rule: AD_03: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & _car.getHasSidePanelAirbags() -> PremiumDiscount(_car,18);
	private final static java.util.Properties _annotations_AD_03 = new java.util.Properties();
	
	// rule: AD_04: PotentialTheftRating(_car,"high") & _car.getHasAlarm() -> PremiumDiscount(_car,10);
	private final static java.util.Properties _annotations_AD_04 = new java.util.Properties();
	
	
	// initialise annotations
	static {
		// relationship annotations for rule  AD_01: _car.getHasAirbags() & !(_car.getHasFrontPassengerAirbag()) & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,12);
		_annotations_AD_01.put("category","Auto Discounts Rule Set");
		_annotations_AD_01.put("author","Jens Dietrich");
		_annotations_AD_01.put("lastupdated","19/11/10");
		
		// rule annotations for rule  AD_01: _car.getHasAirbags() & !(_car.getHasFrontPassengerAirbag()) & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,12);
		_annotations_AD_01.put("description","If the car only has Driver airbags then lower the premium by 12%");
		
		
	
		// relationship annotations for rule  AD_02: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,15);
		_annotations_AD_02.put("category","Auto Discounts Rule Set");
		_annotations_AD_02.put("author","Jens Dietrich");
		_annotations_AD_02.put("lastupdated","19/11/10");
		
		// rule annotations for rule  AD_02: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,15);
		_annotations_AD_02.put("description","If the car has Driver and Passenger airbags then lower the premium by 15%");
		
		
	
		// relationship annotations for rule  AD_03: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & _car.getHasSidePanelAirbags() -> PremiumDiscount(_car,18);
		_annotations_AD_03.put("category","Auto Discounts Rule Set");
		_annotations_AD_03.put("author","Jens Dietrich");
		_annotations_AD_03.put("lastupdated","19/11/10");
		
		// rule annotations for rule  AD_03: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & _car.getHasSidePanelAirbags() -> PremiumDiscount(_car,18);
		_annotations_AD_03.put("description","If the car has Driver, Passenger and Side airbags then lower the premium by 18%");
		
		
	
		// relationship annotations for rule  AD_04: PotentialTheftRating(_car,"high") & _car.getHasAlarm() -> PremiumDiscount(_car,10);
		_annotations_AD_04.put("category","Auto Discounts Rule Set");
		_annotations_AD_04.put("author","Jens Dietrich");
		_annotations_AD_04.put("lastupdated","19/11/10");
		
		// rule annotations for rule  AD_04: PotentialTheftRating(_car,"high") & _car.getHasAlarm() -> PremiumDiscount(_car,10);
		_annotations_AD_04.put("description","If the car's potential theft rating is high and the car is equipped with an alarm system, then lower the premium by 10%");
		
		
	}
		
	

	// interface generated for queries	
	 
	public static ResultSet<PremiumDiscountRel> getDiscount (  Car car  ) {
		DerivationController _derivation = new DefaultDerivationController();
		return new ResultSet<PremiumDiscountRel>(getDiscount ( _derivation ,  car ),_derivation);
	} 
	 
	public static ResultSet<PremiumDiscountRel> hasDiscount (  Car car ,  int discount  ) {
		DerivationController _derivation = new DefaultDerivationController();
		return new ResultSet<PremiumDiscountRel>(hasDiscount ( _derivation ,  car ,  discount ),_derivation);
	} 
	
	
	// implementations - these methods are referenced by code generated from other rules in this package
	// and therefore kept static 
	 
	static ResourceIterator<PremiumDiscountRel> getDiscount ( final DerivationController _derivation ,  final Car car  ) {
		final int _derivationlevel = _derivation.size();
		return new IteratorChain<PremiumDiscountRel>(4) {
			
			public ResourceIterator<PremiumDiscountRel> getNextIterator(int pos) {
			switch (pos) {
				
                		case 0: {
                			// invoke AD_01: _car.getHasAirbags() & !(_car.getHasFrontPassengerAirbag()) & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,12);
                			return getDiscount_0(_derivation.pop(_derivationlevel) ,  car );
                		}
				
                		case 1: {
                			// invoke AD_02: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,15);
                			return getDiscount_1(_derivation.pop(_derivationlevel) ,  car );
                		}
				
                		case 2: {
                			// invoke AD_03: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & _car.getHasSidePanelAirbags() -> PremiumDiscount(_car,18);
                			return getDiscount_2(_derivation.pop(_derivationlevel) ,  car );
                		}
				
                		case 3: {
                			// invoke AD_04: PotentialTheftRating(_car,"high") & _car.getHasAlarm() -> PremiumDiscount(_car,10);
                			return getDiscount_3(_derivation.pop(_derivationlevel) ,  car );
                		}
				
				default: return EmptyIterator.DEFAULT;
			}}
		};
	} 
	 
	static ResourceIterator<PremiumDiscountRel> hasDiscount ( final DerivationController _derivation ,  final Car car ,  final int discount  ) {
		final int _derivationlevel = _derivation.size();
		return new IteratorChain<PremiumDiscountRel>(4) {
			
			public ResourceIterator<PremiumDiscountRel> getNextIterator(int pos) {
			switch (pos) {
				
                		case 0: {
                			// invoke AD_01: _car.getHasAirbags() & !(_car.getHasFrontPassengerAirbag()) & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,12);
                			return hasDiscount_0(_derivation.pop(_derivationlevel) ,  car ,  discount );
                		}
				
                		case 1: {
                			// invoke AD_02: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,15);
                			return hasDiscount_1(_derivation.pop(_derivationlevel) ,  car ,  discount );
                		}
				
                		case 2: {
                			// invoke AD_03: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & _car.getHasSidePanelAirbags() -> PremiumDiscount(_car,18);
                			return hasDiscount_2(_derivation.pop(_derivationlevel) ,  car ,  discount );
                		}
				
                		case 3: {
                			// invoke AD_04: PotentialTheftRating(_car,"high") & _car.getHasAlarm() -> PremiumDiscount(_car,10);
                			return hasDiscount_3(_derivation.pop(_derivationlevel) ,  car ,  discount );
                		}
				
				default: return EmptyIterator.DEFAULT;
			}}
		};
	} 
	
	
	
	// private methods - each method represents the invocation of a single rule for a certain query
	// query: getDiscount
	// rule: AD_01: _car.getHasAirbags() & !(_car.getHasFrontPassengerAirbag()) & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,12);
	private static ResourceIterator<PremiumDiscountRel> getDiscount_0 (final DerivationController _derivation ,  final Car car ) {
		
		_derivation.log("org.mandarax.examples.userv.rules.generated.PremiumDiscount.AD_01", DerivationController.RULE, _annotations_AD_01);
		
			
	
		
		// utility class used to keep track of variables bindings
		// rule: AD_01: _car.getHasAirbags() & !(_car.getHasFrontPassengerAirbag()) & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,12);
		// prereqs: [_car.getHasAirbags(), !(_car.getHasFrontPassengerAirbag()), !(_car.getHasSidePanelAirbags())]
		class _Bindings {
			private org.mandarax.examples.userv.domain.Car _car = car;
		}
		final _Bindings _bindings = new _Bindings();
		ResourceIterator<?> _tmp = null;
		
		 
		
		
		
		 
		// check conditions	
		boolean _checkfailed = false;
		
		
		
		if (_checkfailed) {
			return EmptyIterator.DEFAULT;
		}
		
		

		 
		
		
		
		// apply prerequisite _car.getHasAirbags()
		
		
		 // case 4
					if (!(_bindings._car.hasAirbags())) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite !(_car.getHasFrontPassengerAirbag())
		
		
		 // case 4
					if (!(!(_bindings._car.hasFrontPassengerAirbag()))) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite !(_car.getHasSidePanelAirbags())
		
		
		 // case 4
					if (!(!(_bindings._car.hasSidePanelAirbags()))) {return EmptyIterator.DEFAULT;} 
					
		
		
		// rule head
		
		return new SingletonIterator(new PremiumDiscountRel(_bindings._car,12));
        
		
		
		
	

	}
	// rule: AD_02: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,15);
	private static ResourceIterator<PremiumDiscountRel> getDiscount_1 (final DerivationController _derivation ,  final Car car ) {
		
		_derivation.log("org.mandarax.examples.userv.rules.generated.PremiumDiscount.AD_02", DerivationController.RULE, _annotations_AD_02);
		
			
	
		
		// utility class used to keep track of variables bindings
		// rule: AD_02: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,15);
		// prereqs: [_car.getHasAirbags(), _car.getHasFrontPassengerAirbag(), !(_car.getHasSidePanelAirbags())]
		class _Bindings {
			private org.mandarax.examples.userv.domain.Car _car = car;
		}
		final _Bindings _bindings = new _Bindings();
		ResourceIterator<?> _tmp = null;
		
		 
		
		
		
		 
		// check conditions	
		boolean _checkfailed = false;
		
		
		
		if (_checkfailed) {
			return EmptyIterator.DEFAULT;
		}
		
		

		 
		
		
		
		// apply prerequisite _car.getHasAirbags()
		
		
		 // case 4
					if (!(_bindings._car.hasAirbags())) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite _car.getHasFrontPassengerAirbag()
		
		
		 // case 4
					if (!(_bindings._car.hasFrontPassengerAirbag())) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite !(_car.getHasSidePanelAirbags())
		
		
		 // case 4
					if (!(!(_bindings._car.hasSidePanelAirbags()))) {return EmptyIterator.DEFAULT;} 
					
		
		
		// rule head
		
		return new SingletonIterator(new PremiumDiscountRel(_bindings._car,15));
        
		
		
		
	

	}
	// rule: AD_03: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & _car.getHasSidePanelAirbags() -> PremiumDiscount(_car,18);
	private static ResourceIterator<PremiumDiscountRel> getDiscount_2 (final DerivationController _derivation ,  final Car car ) {
		
		_derivation.log("org.mandarax.examples.userv.rules.generated.PremiumDiscount.AD_03", DerivationController.RULE, _annotations_AD_03);
		
			
	
		
		// utility class used to keep track of variables bindings
		// rule: AD_03: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & _car.getHasSidePanelAirbags() -> PremiumDiscount(_car,18);
		// prereqs: [_car.getHasAirbags(), _car.getHasFrontPassengerAirbag(), _car.getHasSidePanelAirbags()]
		class _Bindings {
			private org.mandarax.examples.userv.domain.Car _car = car;
		}
		final _Bindings _bindings = new _Bindings();
		ResourceIterator<?> _tmp = null;
		
		 
		
		
		
		 
		// check conditions	
		boolean _checkfailed = false;
		
		
		
		if (_checkfailed) {
			return EmptyIterator.DEFAULT;
		}
		
		

		 
		
		
		
		// apply prerequisite _car.getHasAirbags()
		
		
		 // case 4
					if (!(_bindings._car.hasAirbags())) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite _car.getHasFrontPassengerAirbag()
		
		
		 // case 4
					if (!(_bindings._car.hasFrontPassengerAirbag())) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite _car.getHasSidePanelAirbags()
		
		
		 // case 4
					if (!(_bindings._car.hasSidePanelAirbags())) {return EmptyIterator.DEFAULT;} 
					
		
		
		// rule head
		
		return new SingletonIterator(new PremiumDiscountRel(_bindings._car,18));
        
		
		
		
	

	}
	// rule: AD_04: PotentialTheftRating(_car,"high") & _car.getHasAlarm() -> PremiumDiscount(_car,10);
	private static ResourceIterator<PremiumDiscountRel> getDiscount_3 (final DerivationController _derivation ,  final Car car ) {
		
		_derivation.log("org.mandarax.examples.userv.rules.generated.PremiumDiscount.AD_04", DerivationController.RULE, _annotations_AD_04);
		
			
	
		
		// utility class used to keep track of variables bindings
		// rule: AD_04: PotentialTheftRating(_car,"high") & _car.getHasAlarm() -> PremiumDiscount(_car,10);
		// prereqs: [_car.getHasAlarm(), PotentialTheftRating(_car,"high")]
		class _Bindings {
			private org.mandarax.examples.userv.domain.Car _car = car;
		}
		final _Bindings _bindings = new _Bindings();
		ResourceIterator<?> _tmp = null;
		
		 
		
		
		
		 
		// check conditions	
		boolean _checkfailed = false;
		
		
		
		if (_checkfailed) {
			return EmptyIterator.DEFAULT;
		}
		
		

		 
		
		
		
		// apply prerequisite _car.getHasAlarm()
		
		
		 // case 4
					if (!(_bindings._car.hasAlarm())) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite PotentialTheftRating(_car,"high")
		
		
		 // case 4
					
					_tmp = PotentialTheftRatingRelInstances.hasRating(_derivation.push(),_bindings._car,"high");
					
					if (!_tmp.hasNext()) {
						_tmp.close();
						return EmptyIterator.DEFAULT;
					}
					
					
		
		
		// rule head
		
		return new SingletonIterator(new PremiumDiscountRel(_bindings._car,10));
        
		
		
		
	

	}
	// query: hasDiscount
	// rule: AD_01: _car.getHasAirbags() & !(_car.getHasFrontPassengerAirbag()) & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,12);
	private static ResourceIterator<PremiumDiscountRel> hasDiscount_0 (final DerivationController _derivation ,  final Car car ,  final int discount ) {
		
		_derivation.log("org.mandarax.examples.userv.rules.generated.PremiumDiscount.AD_01", DerivationController.RULE, _annotations_AD_01);
		
			
	
		
		// utility class used to keep track of variables bindings
		// rule: AD_01: _car.getHasAirbags() & !(_car.getHasFrontPassengerAirbag()) & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,12);
		// prereqs: [_car.getHasAirbags(), !(_car.getHasFrontPassengerAirbag()), !(_car.getHasSidePanelAirbags())]
		class _Bindings {
			private org.mandarax.examples.userv.domain.Car _car = car;
		}
		final _Bindings _bindings = new _Bindings();
		ResourceIterator<?> _tmp = null;
		
		 
		
		
		
		 
		// check conditions	
		boolean _checkfailed = false;
		
		
		
		_checkfailed = _checkfailed || !Equals.compare(discount,12); 
		
		if (_checkfailed) {
			return EmptyIterator.DEFAULT;
		}
		
		

		 
		
		
		
		// apply prerequisite _car.getHasAirbags()
		
		
		 // case 4
					if (!(_bindings._car.hasAirbags())) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite !(_car.getHasFrontPassengerAirbag())
		
		
		 // case 4
					if (!(!(_bindings._car.hasFrontPassengerAirbag()))) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite !(_car.getHasSidePanelAirbags())
		
		
		 // case 4
					if (!(!(_bindings._car.hasSidePanelAirbags()))) {return EmptyIterator.DEFAULT;} 
					
		
		
		// rule head
		
		return new SingletonIterator(new PremiumDiscountRel(_bindings._car,12));
        
		
		
		
	

	}
	// rule: AD_02: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,15);
	private static ResourceIterator<PremiumDiscountRel> hasDiscount_1 (final DerivationController _derivation ,  final Car car ,  final int discount ) {
		
		_derivation.log("org.mandarax.examples.userv.rules.generated.PremiumDiscount.AD_02", DerivationController.RULE, _annotations_AD_02);
		
			
	
		
		// utility class used to keep track of variables bindings
		// rule: AD_02: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & !(_car.getHasSidePanelAirbags()) -> PremiumDiscount(_car,15);
		// prereqs: [_car.getHasAirbags(), _car.getHasFrontPassengerAirbag(), !(_car.getHasSidePanelAirbags())]
		class _Bindings {
			private org.mandarax.examples.userv.domain.Car _car = car;
		}
		final _Bindings _bindings = new _Bindings();
		ResourceIterator<?> _tmp = null;
		
		 
		
		
		
		 
		// check conditions	
		boolean _checkfailed = false;
		
		
		
		_checkfailed = _checkfailed || !Equals.compare(discount,15); 
		
		if (_checkfailed) {
			return EmptyIterator.DEFAULT;
		}
		
		

		 
		
		
		
		// apply prerequisite _car.getHasAirbags()
		
		
		 // case 4
					if (!(_bindings._car.hasAirbags())) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite _car.getHasFrontPassengerAirbag()
		
		
		 // case 4
					if (!(_bindings._car.hasFrontPassengerAirbag())) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite !(_car.getHasSidePanelAirbags())
		
		
		 // case 4
					if (!(!(_bindings._car.hasSidePanelAirbags()))) {return EmptyIterator.DEFAULT;} 
					
		
		
		// rule head
		
		return new SingletonIterator(new PremiumDiscountRel(_bindings._car,15));
        
		
		
		
	

	}
	// rule: AD_03: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & _car.getHasSidePanelAirbags() -> PremiumDiscount(_car,18);
	private static ResourceIterator<PremiumDiscountRel> hasDiscount_2 (final DerivationController _derivation ,  final Car car ,  final int discount ) {
		
		_derivation.log("org.mandarax.examples.userv.rules.generated.PremiumDiscount.AD_03", DerivationController.RULE, _annotations_AD_03);
		
			
	
		
		// utility class used to keep track of variables bindings
		// rule: AD_03: _car.getHasAirbags() & _car.getHasFrontPassengerAirbag() & _car.getHasSidePanelAirbags() -> PremiumDiscount(_car,18);
		// prereqs: [_car.getHasAirbags(), _car.getHasFrontPassengerAirbag(), _car.getHasSidePanelAirbags()]
		class _Bindings {
			private org.mandarax.examples.userv.domain.Car _car = car;
		}
		final _Bindings _bindings = new _Bindings();
		ResourceIterator<?> _tmp = null;
		
		 
		
		
		
		 
		// check conditions	
		boolean _checkfailed = false;
		
		
		
		_checkfailed = _checkfailed || !Equals.compare(discount,18); 
		
		if (_checkfailed) {
			return EmptyIterator.DEFAULT;
		}
		
		

		 
		
		
		
		// apply prerequisite _car.getHasAirbags()
		
		
		 // case 4
					if (!(_bindings._car.hasAirbags())) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite _car.getHasFrontPassengerAirbag()
		
		
		 // case 4
					if (!(_bindings._car.hasFrontPassengerAirbag())) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite _car.getHasSidePanelAirbags()
		
		
		 // case 4
					if (!(_bindings._car.hasSidePanelAirbags())) {return EmptyIterator.DEFAULT;} 
					
		
		
		// rule head
		
		return new SingletonIterator(new PremiumDiscountRel(_bindings._car,18));
        
		
		
		
	

	}
	// rule: AD_04: PotentialTheftRating(_car,"high") & _car.getHasAlarm() -> PremiumDiscount(_car,10);
	private static ResourceIterator<PremiumDiscountRel> hasDiscount_3 (final DerivationController _derivation ,  final Car car ,  final int discount ) {
		
		_derivation.log("org.mandarax.examples.userv.rules.generated.PremiumDiscount.AD_04", DerivationController.RULE, _annotations_AD_04);
		
			
	
		
		// utility class used to keep track of variables bindings
		// rule: AD_04: PotentialTheftRating(_car,"high") & _car.getHasAlarm() -> PremiumDiscount(_car,10);
		// prereqs: [_car.getHasAlarm(), PotentialTheftRating(_car,"high")]
		class _Bindings {
			private org.mandarax.examples.userv.domain.Car _car = car;
		}
		final _Bindings _bindings = new _Bindings();
		ResourceIterator<?> _tmp = null;
		
		 
		
		
		
		 
		// check conditions	
		boolean _checkfailed = false;
		
		
		
		_checkfailed = _checkfailed || !Equals.compare(discount,10); 
		
		if (_checkfailed) {
			return EmptyIterator.DEFAULT;
		}
		
		

		 
		
		
		
		// apply prerequisite _car.getHasAlarm()
		
		
		 // case 4
					if (!(_bindings._car.hasAlarm())) {return EmptyIterator.DEFAULT;} 
					
		 
		
		
		
		// apply prerequisite PotentialTheftRating(_car,"high")
		
		
		 // case 4
					
					_tmp = PotentialTheftRatingRelInstances.hasRating(_derivation.push(),_bindings._car,"high");
					
					if (!_tmp.hasNext()) {
						_tmp.close();
						return EmptyIterator.DEFAULT;
					}
					
					
		
		
		// rule head
		
		return new SingletonIterator(new PremiumDiscountRel(_bindings._car,10));
        
		
		
		
	

	}
	
	
	// methods representing aggregation functions
	
	
}


