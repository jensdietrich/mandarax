package org.mandarax.examples.userv.rules.generated;
 
import org.mandarax.examples.userv.domain.*;

import org.mandarax.rt.*;

/**
 * Interface for queries for relationship <strong>IsNew</strong>.
 * Generated by org.mandarax.compiler.impl.DefaultCompiler.
 * @version Dec 2, 2010 1:53:25 PM 
 */
public class IsNewRelInstances {
	// object references
	 
	public static int CurrentYear = 2010;
	 
	public static int NextYear = CurrentYear+1;
	
	
	// fields representing annotations
	
	// rule: AP_05: (_car.getModelYear())==CurrentYear -> IsNew(_car);
	private final static java.util.Properties _annotations_AP_05 = new java.util.Properties();
	
	// rule: AP_06: (_car.getModelYear())==NextYear -> IsNew(_car);
	private final static java.util.Properties _annotations_AP_06 = new java.util.Properties();
	
	
	// initialise annotations
	static {
		// relationship annotations for rule  AP_05: (_car.getModelYear())==CurrentYear -> IsNew(_car);
		_annotations_AP_05.put("category","Auto Premiums Rule Set");
		_annotations_AP_05.put("author","Jens Dietrich");
		_annotations_AP_05.put("lastupdated","19/11/10");
		
		// rule annotations for rule  AP_05: (_car.getModelYear())==CurrentYear -> IsNew(_car);
		_annotations_AP_05.put("description","If the model year is the same as the current year, then new car");
		
		
	
		// relationship annotations for rule  AP_06: (_car.getModelYear())==NextYear -> IsNew(_car);
		_annotations_AP_06.put("category","Auto Premiums Rule Set");
		_annotations_AP_06.put("author","Jens Dietrich");
		_annotations_AP_06.put("lastupdated","19/11/10");
		
		// rule annotations for rule  AP_06: (_car.getModelYear())==NextYear -> IsNew(_car);
		_annotations_AP_06.put("description","If the model year is the same as next year, then the car is new");
		
		
	}
		
	

	// interface generated for queries	
	 
	public static ResultSet<IsNewRel> isNew (  Car car  ) {
		DerivationController _derivation = new DefaultDerivationController();
		return new ResultSet<IsNewRel>(isNew ( _derivation ,  car ),_derivation);
	} 
	
	
	// implementations - these methods are referenced by code generated from other rules in this package
	// and therefore kept static 
	 
	static ResourceIterator<IsNewRel> isNew ( final DerivationController _derivation ,  final Car car  ) {
		final int _derivationlevel = _derivation.size();
		return new IteratorChain<IsNewRel>(2) {
			
			public ResourceIterator<IsNewRel> getNextIterator(int pos) {
			switch (pos) {
				
                		case 0: {
                			// invoke AP_05: (_car.getModelYear())==CurrentYear -> IsNew(_car);
                			return isNew_0(_derivation.pop(_derivationlevel) ,  car );
                		}
				
                		case 1: {
                			// invoke AP_06: (_car.getModelYear())==NextYear -> IsNew(_car);
                			return isNew_1(_derivation.pop(_derivationlevel) ,  car );
                		}
				
				default: return EmptyIterator.DEFAULT;
			}}
		};
	} 
	
	
	
	// private methods - each method represents the invocation of a single rule for a certain query
	// query: isNew
	// rule: AP_05: (_car.getModelYear())==CurrentYear -> IsNew(_car);
	private static ResourceIterator<IsNewRel> isNew_0 (final DerivationController _derivation ,  final Car car ) {
		
		_derivation.log("org.mandarax.examples.userv.rules.generated.IsNew.AP_05", DerivationController.RULE, _annotations_AP_05);
		
			
	
		
		// utility class used to keep track of variables bindings
		// rule: AP_05: (_car.getModelYear())==CurrentYear -> IsNew(_car);
		// prereqs: [(_car.getModelYear())==CurrentYear]
		class _Bindings {
			private org.mandarax.examples.userv.domain.Car _car = car;
			private int CurrentYear = IsNewRelInstances.CurrentYear;
		}
		final _Bindings _bindings = new _Bindings();
		ResourceIterator<?> _tmp = null;
		
		 
		
		
		
		
		

		 
		
		
		
		// apply prerequisite (_car.getModelYear())==CurrentYear
		
		
		 // case 4
					if (!(org.mandarax.rt.Equals.compare(_bindings._car.getModelYear(),_bindings.CurrentYear))) {return EmptyIterator.DEFAULT;} 
					
		
		
		// rule head
		
		return new SingletonIterator(new IsNewRel(_bindings._car));
        
		
		
		
	

	}
	// rule: AP_06: (_car.getModelYear())==NextYear -> IsNew(_car);
	private static ResourceIterator<IsNewRel> isNew_1 (final DerivationController _derivation ,  final Car car ) {
		
		_derivation.log("org.mandarax.examples.userv.rules.generated.IsNew.AP_06", DerivationController.RULE, _annotations_AP_06);
		
			
	
		
		// utility class used to keep track of variables bindings
		// rule: AP_06: (_car.getModelYear())==NextYear -> IsNew(_car);
		// prereqs: [(_car.getModelYear())==NextYear]
		class _Bindings {
			private org.mandarax.examples.userv.domain.Car _car = car;
			private int NextYear = IsNewRelInstances.NextYear;
		}
		final _Bindings _bindings = new _Bindings();
		ResourceIterator<?> _tmp = null;
		
		 
		
		
		
		
		

		 
		
		
		
		// apply prerequisite (_car.getModelYear())==NextYear
		
		
		 // case 4
					if (!(org.mandarax.rt.Equals.compare(_bindings._car.getModelYear(),_bindings.NextYear))) {return EmptyIterator.DEFAULT;} 
					
		
		
		// rule head
		
		return new SingletonIterator(new IsNewRel(_bindings._car));
        
		
		
		
	

	}
	
	
	// methods representing aggregation functions
	
	
}


