package org.mandarax.examples.userv.rules.generated;
 
import org.mandarax.examples.userv.domain.*;

import org.mandarax.rt.*;

/**
 * Interface for queries for relationship <strong>IsHighRiskDriver</strong>.
 * Generated by org.mandarax.compiler.impl.DefaultCompiler.
 * @version Dec 2, 2010 1:53:25 PM 
 */
public class IsHighRiskDriverRelInstances {
	// object references
	
	
	// fields representing annotations
	
	// rule: DE_DRC01: _driver.getHasBeenConvictedOfaDUI() -> IsHighRiskDriver(_driver);
	private final static java.util.Properties _annotations_DE_DRC01 = new java.util.Properties();
	
	// rule: DE_DRC02: (_driver.getNumberOfAccidentsInvolvedIn())>2 -> IsHighRiskDriver(_driver);
	private final static java.util.Properties _annotations_DE_DRC02 = new java.util.Properties();
	
	// rule: DE_DRC03: (_driver.getNumberOfMovingViolationsInLastTwoYears())>3 -> IsHighRiskDriver(_driver);
	private final static java.util.Properties _annotations_DE_DRC03 = new java.util.Properties();
	
	
	// initialise annotations
	static {
		// relationship annotations for rule  DE_DRC01: _driver.getHasBeenConvictedOfaDUI() -> IsHighRiskDriver(_driver);
		_annotations_DE_DRC01.put("category","Driver Eligibility Rule Set");
		_annotations_DE_DRC01.put("author","Jens Dietrich");
		_annotations_DE_DRC01.put("lastupdated","19/11/10");
		
		// rule annotations for rule  DE_DRC01: _driver.getHasBeenConvictedOfaDUI() -> IsHighRiskDriver(_driver);
		_annotations_DE_DRC01.put("description","If the driver has been convicted of a DUI, then the driver qualifies as a High Risk Driver");
		
		
	
		// relationship annotations for rule  DE_DRC02: (_driver.getNumberOfAccidentsInvolvedIn())>2 -> IsHighRiskDriver(_driver);
		_annotations_DE_DRC02.put("category","Driver Eligibility Rule Set");
		_annotations_DE_DRC02.put("author","Jens Dietrich");
		_annotations_DE_DRC02.put("lastupdated","19/11/10");
		
		// rule annotations for rule  DE_DRC02: (_driver.getNumberOfAccidentsInvolvedIn())>2 -> IsHighRiskDriver(_driver);
		_annotations_DE_DRC02.put("description","If the number of accidents the applicant has been involved in is greater than 2, then the driver is a High Risk Driver");
		
		
	
		// relationship annotations for rule  DE_DRC03: (_driver.getNumberOfMovingViolationsInLastTwoYears())>3 -> IsHighRiskDriver(_driver);
		_annotations_DE_DRC03.put("category","Driver Eligibility Rule Set");
		_annotations_DE_DRC03.put("author","Jens Dietrich");
		_annotations_DE_DRC03.put("lastupdated","19/11/10");
		
		// rule annotations for rule  DE_DRC03: (_driver.getNumberOfMovingViolationsInLastTwoYears())>3 -> IsHighRiskDriver(_driver);
		_annotations_DE_DRC03.put("description","If the driver has had more that 3 moving violations in the last two years, then the driver is a High Risk Driver");
		
		
	}
		
	

	// interface generated for queries	
	 
	public static ResultSet<IsHighRiskDriverRel> isHighRiskDriver (  Driver driver  ) {
		DerivationController _derivation = new DefaultDerivationController();
		return new ResultSet<IsHighRiskDriverRel>(isHighRiskDriver ( _derivation ,  driver ),_derivation);
	} 
	
	
	// implementations - these methods are referenced by code generated from other rules in this package
	// and therefore kept static 
	 
	static ResourceIterator<IsHighRiskDriverRel> isHighRiskDriver ( final DerivationController _derivation ,  final Driver driver  ) {
		final int _derivationlevel = _derivation.size();
		return new IteratorChain<IsHighRiskDriverRel>(3) {
			
			public ResourceIterator<IsHighRiskDriverRel> getNextIterator(int pos) {
			switch (pos) {
				
                		case 0: {
                			// invoke DE_DRC01: _driver.getHasBeenConvictedOfaDUI() -> IsHighRiskDriver(_driver);
                			return isHighRiskDriver_0(_derivation.pop(_derivationlevel) ,  driver );
                		}
				
                		case 1: {
                			// invoke DE_DRC02: (_driver.getNumberOfAccidentsInvolvedIn())>2 -> IsHighRiskDriver(_driver);
                			return isHighRiskDriver_1(_derivation.pop(_derivationlevel) ,  driver );
                		}
				
                		case 2: {
                			// invoke DE_DRC03: (_driver.getNumberOfMovingViolationsInLastTwoYears())>3 -> IsHighRiskDriver(_driver);
                			return isHighRiskDriver_2(_derivation.pop(_derivationlevel) ,  driver );
                		}
				
				default: return EmptyIterator.DEFAULT;
			}}
		};
	} 
	
	
	
	// private methods - each method represents the invocation of a single rule for a certain query
	// query: isHighRiskDriver
	// rule: DE_DRC01: _driver.getHasBeenConvictedOfaDUI() -> IsHighRiskDriver(_driver);
	private static ResourceIterator<IsHighRiskDriverRel> isHighRiskDriver_0 (final DerivationController _derivation ,  final Driver driver ) {
		
		_derivation.log("org.mandarax.examples.userv.rules.generated.IsHighRiskDriver.DE_DRC01", DerivationController.RULE, _annotations_DE_DRC01);
		
			
	
		
		// utility class used to keep track of variables bindings
		// rule: DE_DRC01: _driver.getHasBeenConvictedOfaDUI() -> IsHighRiskDriver(_driver);
		// prereqs: [_driver.getHasBeenConvictedOfaDUI()]
		class _Bindings {
			private org.mandarax.examples.userv.domain.Driver _driver = driver;
		}
		final _Bindings _bindings = new _Bindings();
		ResourceIterator<?> _tmp = null;
		
		 
		
		
		
		
		

		 
		
		
		
		// apply prerequisite _driver.getHasBeenConvictedOfaDUI()
		
		
		 // case 4
					if (!(_bindings._driver.hasBeenConvictedOfaDUI())) {return EmptyIterator.DEFAULT;} 
					
		
		
		// rule head
		
		return new SingletonIterator(new IsHighRiskDriverRel(_bindings._driver));
        
		
		
		
	

	}
	// rule: DE_DRC02: (_driver.getNumberOfAccidentsInvolvedIn())>2 -> IsHighRiskDriver(_driver);
	private static ResourceIterator<IsHighRiskDriverRel> isHighRiskDriver_1 (final DerivationController _derivation ,  final Driver driver ) {
		
		_derivation.log("org.mandarax.examples.userv.rules.generated.IsHighRiskDriver.DE_DRC02", DerivationController.RULE, _annotations_DE_DRC02);
		
			
	
		
		// utility class used to keep track of variables bindings
		// rule: DE_DRC02: (_driver.getNumberOfAccidentsInvolvedIn())>2 -> IsHighRiskDriver(_driver);
		// prereqs: [(_driver.getNumberOfAccidentsInvolvedIn())>2]
		class _Bindings {
			private org.mandarax.examples.userv.domain.Driver _driver = driver;
		}
		final _Bindings _bindings = new _Bindings();
		ResourceIterator<?> _tmp = null;
		
		 
		
		
		
		
		

		 
		
		
		
		// apply prerequisite (_driver.getNumberOfAccidentsInvolvedIn())>2
		
		
		 // case 4
					if (!((_bindings._driver.getNumberOfAccidentsInvolvedIn())>2)) {return EmptyIterator.DEFAULT;} 
					
		
		
		// rule head
		
		return new SingletonIterator(new IsHighRiskDriverRel(_bindings._driver));
        
		
		
		
	

	}
	// rule: DE_DRC03: (_driver.getNumberOfMovingViolationsInLastTwoYears())>3 -> IsHighRiskDriver(_driver);
	private static ResourceIterator<IsHighRiskDriverRel> isHighRiskDriver_2 (final DerivationController _derivation ,  final Driver driver ) {
		
		_derivation.log("org.mandarax.examples.userv.rules.generated.IsHighRiskDriver.DE_DRC03", DerivationController.RULE, _annotations_DE_DRC03);
		
			
	
		
		// utility class used to keep track of variables bindings
		// rule: DE_DRC03: (_driver.getNumberOfMovingViolationsInLastTwoYears())>3 -> IsHighRiskDriver(_driver);
		// prereqs: [(_driver.getNumberOfMovingViolationsInLastTwoYears())>3]
		class _Bindings {
			private org.mandarax.examples.userv.domain.Driver _driver = driver;
		}
		final _Bindings _bindings = new _Bindings();
		ResourceIterator<?> _tmp = null;
		
		 
		
		
		
		
		

		 
		
		
		
		// apply prerequisite (_driver.getNumberOfMovingViolationsInLastTwoYears())>3
		
		
		 // case 4
					if (!((_bindings._driver.getNumberOfMovingViolationsInLastTwoYears())>3)) {return EmptyIterator.DEFAULT;} 
					
		
		
		// rule head
		
		return new SingletonIterator(new IsHighRiskDriverRel(_bindings._driver));
        
		
		
		
	

	}
	
	
	// methods representing aggregation functions
	
	
}


